UDP сервер:

import socket

server_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
server_address = ('127.0.0.1', 4322)
server_socket.bind(server_address)

while True:
    data, client_address = server_socket.recvfrom(1024)
    source_ip = client_address[0]
    
    try:
        message_parts = data.decode('utf-8').strip().split('/')
        if len(message_parts) != 3:
            raise ValueError("Invalid message format")

        original_string, sub_string, other_original_string = message_parts

        if sub_string in original_string and sub_string in other_original_string:
            if sub_string == original_string and sub_string != other_original_string:
                response = "Originalen String 1"
            elif sub_string != original_string and sub_string == other_original_string:
                response = "Drug Originalen String 2"
            else:
                response = f"Podstring na dvata stringa e '{sub_string}'"
        else:
            raise ValueError("Nepoznat izvor")

        server_socket.sendto(response.encode('utf-8'), client_address)

    except ValueError as e:
        server_socket.sendto(str(e).encode('utf-8'), client_address)



UDP клиент:

import socket

client_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
client_socket.settimeout(5)  # Максимално време на блокирање 5000ms

server_address = ('127.0.0.1', 4322)

while True:
    try:
        message = input("Vnesete poraka vo format 'OriginalenString/Podstring/DrugOriginalenString': ")
        message_parts = message.strip().split('/')
        
        if len(message_parts) != 3:
            raise ValueError("Vnesete validna poraka povtorno")

        client_socket.sendto(message.encode('utf-8'), server_address)

        response, _ = client_socket.recvfrom(1024)
        print(response.decode('utf-8'))
        break

    except ValueError as e:
        print(e)
    except socket.timeout:
        print("Vremeot istekna. Proverete povtorno.")
        break

client_socket.close()


U JAVA KIRO
